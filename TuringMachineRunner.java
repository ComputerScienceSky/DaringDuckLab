public class TuringMachineRunner extends DaringDuckLab {
    public static void main(String[] args) {
        // Define the states
        State preStart = new State("preStart", false);
        State startState = new State("start", false);
        State stateOne = new State("one", false);
        State stateTwo = new State("two", false);
        State stateThree = new State("three", false);
        State stateFour = new State("four", false);
        State stateFive = new State("five", false);
        State stateSix = new State("six", false);
        State stateSeven = new State("seven", false);
        State stateEight = new State("eight", false);
        State stateNine = new State("nine", false);
        State stateTen = new State("ten", false);
        State stateEleven = new State("eleven", false);
        State stateTwelve = new State("twelve", false);
        State stateThirteen = new State("thirteen", false);
        State stateFourteen = new State("fourteen", false);
        State stateFifteen = new State("fifteen", false);
        State stateSixteen = new State("sixteen", false);
        State stateSeventeen = new State("seventeen", false);
        State stateEighteen = new State("eighteen", false);
        State stateNineteen = new State("nineteen", false);
        State stateTwenty = new State("twenty", false);
        State stateTwentyOne = new State("twenty-one", false);
        State stateTwentyTwo = new State("twenty-two", false);
        State stateTwentyThree = new State("twenty-three", false);
        State stateTwentyFour = new State("twenty-four", false);
        State stateTwentyFive = new State("twenty-five", false);
        State stateTwentySix = new State("twenty-six", false);
        State stateTwentySeven = new State("twenty-seven", false);
        State stateTwentyEight = new State("twenty-eight", false);
        State stateTwentyNine = new State("twenty-nine", false);
        State stateThirty = new State("thirty", false);
        State statethirtyOne = new State("thirty-one", false);
        State statethirtyTwo = new State("thirty-two", false);
        State statethirtyThree = new State("thirty-three", false);
        State statethirtyFour = new State("thirty-four", false);
        State statethirtyFive = new State("thirty-five", false);
        State statethirtySix = new State("thirty-six", false);
        State statethirtySeven = new State("thirty-seven", false);
        State statethirtyEight = new State("thirty-eight", false);
        State statethirtyNine = new State("thirty-nine", false);
        State stateforty = new State("forty", false);
        State statefortyOne = new State("forty-one", false);
        State statefortyTwo = new State("forty-two", false);
        State statefortyThree = new State("forty-three", false);
        State statefortyFour = new State("forty-four", false);
        State statefortyFive = new State("forty-five", false);
        State statefortySix = new State("forty-six", false);
        State statefortySeven = new State("forty-seven", false);
        State statefortyEight = new State("forty-eight", false);
        State statefortyNine = new State("forty-nine", false);
        State statefifty = new State("fifty", false);
        State statefiftyOne = new State("fifty-one", false);
        State statefiftyTwo = new State("fifty-two", false);
        State statefiftyThree = new State("fifty-three", false);
        State statefiftyFour = new State("fifty-four", false);
        State statefiftyFive = new State("fifty-five", false);
        State statefiftySix = new State("fifty-six", false);
        State statefiftySeven = new State("fifty-seven", false);
        State statefiftyEight = new State("fifty-eight", false);
        State statefiftyNine = new State("fifty-nine", false);
        State stateSixty = new State("sixty", false);
        State stateSixtyOne = new State("sixty-one", false);
        State stateSixtyTwo = new State("sixty-two", false);
        State stateSixtyThree = new State("sixty-three", false);
        State stateSixtyFour = new State("sixty-four", false);
        State stateSixtyFive = new State("sixty-five", false);
        State stateSixtySix = new State("sixty-six", false);
        State stateSixtySeven = new State("sixty-seven", false);
        State stateSixtyEight = new State("sixty-eight", false);
        State stateSixtyNine = new State("sixty-nine", false);
        State stateSeventy = new State("seventy", false);
        State stateSeventyOne = new State("seventy-one", false);
        State stateSeventyTwo = new State("seventy-two", false);
        State stateSeventyThree = new State("seventy-three", false);
        State stateSeventyFour = new State("seventy-four", false);
        State stateSeventyFive = new State("seventy-five", false);
        State stateSeventySix = new State("seventy-six", false);
        State stateSeventySeven = new State("seventy-seven", false);
        State stateSeventyEight = new State("seventy-eight", false);
        State stateSeventyNine = new State("seventy-nine", false);
        State stateEighty = new State("eighty", false);
        State stateEightyOne = new State("eighty-one", false);
        State stateEightyTwo = new State("eighty-two", false);
        State stateEightyThree = new State("eighty-three", false);
        State stateEightyFour = new State("eighty-four", false);
        State stateEightyFive = new State("eighty-five", false);
        State stateEightySix = new State("eighty-six", false);
        State stateEightySeven = new State("eighty-seven", false);
        State stateEightyEight = new State("eighty-eight", false);
        State stateEightyNine = new State("eighty-nine", false);
        State stateNinety = new State("ninety", false);
        State stateNinetyOne = new State("ninety-one", false);
        State stateNinetyTwo = new State("ninety-two", false);
        State stateNinetyThree = new State("ninety-three", false);
        State stateNinetyFour = new State("ninety-four", false);
        State stateNinetyFive = new State("ninety-five", false);
        State stateNinetySix = new State("ninety-six", false);
        State stateNinetySeven = new State("ninety-seven", false);
        State stateNinetyEight = new State("ninety-eight", false);
        State stateNinetyNine = new State("ninety-nine", false);
        State stateHundred = new State("hundred", false);
        State finalState = new State("final", true);

        // Define the transitions for the start state
        Transition startToInputEnd = new Transition(preStart, 'a', "right");
        preStart.addTransition('a', startToInputEnd);
        Transition backToStart = new Transition(startState, '0', "left");
        preStart.addTransition('0', backToStart);
        Transition startToOne = new Transition(stateOne, '1', "right");
        startState.addTransition('a', startToOne);
        Transition startToFinal = new Transition(finalState, '1', "right");
        startState.addTransition('0', startToFinal);
        Transition startLoop = new Transition(startState, '1', "left");
        startState.addTransition('1', startLoop);
        Transition oneToTwo = new Transition(stateTwo, '1', "right");
        stateOne.addTransition('0', oneToTwo);
        Transition oneToOne = new Transition(stateOne, '1', "right");
        stateOne.addTransition('1', oneToOne);
        Transition twoToThree = new Transition(stateThree, '1', "right");
        stateTwo.addTransition('0', twoToThree);
        Transition threeToFour = new Transition(stateFour, '1', "right");
        stateThree.addTransition('0', threeToFour);
        Transition fourToFive = new Transition(stateFive, '1', "right");
        stateFour.addTransition('0', fourToFive);
        Transition fiveToSix = new Transition(stateSix, '1', "right");
        stateFive.addTransition('0', fiveToSix);
        Transition sixToSeven = new Transition(stateSeven, '1', "right");
        stateSix.addTransition('0', sixToSeven);
        Transition sevenToEight = new Transition(stateEight, '1', "right");
        stateSeven.addTransition('0', sevenToEight);
        Transition eightToNine = new Transition(stateNine, '1', "right");
        stateEight.addTransition('0', eightToNine);
        Transition nineToTen = new Transition(stateTen, '1', "right");
        stateNine.addTransition('0', nineToTen);
        Transition tenToEleven = new Transition(stateEleven, '1', "right");
        stateTen.addTransition('0', tenToEleven);
        Transition elevenToTwelve = new Transition(stateTwelve, '1', "right");
        stateEleven.addTransition('0', elevenToTwelve);
        Transition twelveToThirteen = new Transition(stateThirteen, '1', "right");
        stateTwelve.addTransition('0', twelveToThirteen);
        Transition thirteenToFourteen = new Transition(stateFourteen, '1', "right");
        stateThirteen.addTransition('0', thirteenToFourteen);
        Transition fourteenToFifteen = new Transition(stateFifteen, '1', "right");
        stateFourteen.addTransition('0', fourteenToFifteen);
        Transition fifteenToSixteen = new Transition(stateSixteen, '1', "right");
        stateFifteen.addTransition('0', fifteenToSixteen);
        Transition sixteenToSeventeen = new Transition(stateSeventeen, '1', "right");
        stateSixteen.addTransition('0', sixteenToSeventeen);
        Transition seventeenToEighteen = new Transition(stateEighteen, '1', "right");
        stateSeventeen.addTransition('0', seventeenToEighteen);
        Transition eighteenToNineteen = new Transition(stateNineteen, '1', "right");
        stateEighteen.addTransition('0', eighteenToNineteen);
        Transition nineteenToTwenty = new Transition(stateTwenty, '1', "right");
        stateNineteen.addTransition('0', nineteenToTwenty);
        Transition twentyToTwentyOne = new Transition(stateTwentyOne, '1', "right");
        stateTwenty.addTransition('0', twentyToTwentyOne);
        Transition twentyOneToTwentyTwo = new Transition(stateTwentyTwo, '1', "right");
        stateTwentyOne.addTransition('0', twentyOneToTwentyTwo);
        Transition twentyTwoToTwentyThree = new Transition(stateTwentyThree, '1', "right");
        stateTwentyTwo.addTransition('0', twentyTwoToTwentyThree);
        Transition twentyThreeToTwentyFour = new Transition(stateTwentyFour, '1', "right");
        stateTwentyThree.addTransition('0', twentyThreeToTwentyFour);
        Transition twentyFourToTwentyFive = new Transition(stateTwentyFive, '1', "right");
        stateTwentyFour.addTransition('0', twentyFourToTwentyFive);
        Transition twentyFiveToTwentySix = new Transition(stateTwentySix, '1', "right");
        stateTwentyFive.addTransition('0', twentyFiveToTwentySix);
        Transition twentySixToTwentySeven = new Transition(stateTwentySeven, '1', "right");
        stateTwentySix.addTransition('0', twentySixToTwentySeven);
        Transition twentySevenToTwentyEight = new Transition(stateTwentyEight, '1', "right");
        stateTwentySeven.addTransition('0', twentySevenToTwentyEight);
        Transition twentyEightToTwentyNine = new Transition(stateTwentyNine, '1', "right");
        stateTwentyEight.addTransition('0', twentyEightToTwentyNine);
        Transition twentyNineToThirty = new Transition(stateThirty, '1', "right");
        stateTwentyNine.addTransition('0', twentyNineToThirty);
        Transition thirtyTothirtyOne = new Transition(statethirtyOne, '1', "right");
        stateThirty.addTransition('0', thirtyTothirtyOne);
        Transition thirtyOneTothirtyTwo = new Transition(statethirtyTwo, '1', "right");
        statethirtyOne.addTransition('0', thirtyOneTothirtyTwo);
        Transition thirtyTwoTothirtyThree = new Transition(statethirtyThree, '1', "right");
        statethirtyTwo.addTransition('0', thirtyTwoTothirtyThree);
        Transition thirtyThreeTothirtyFour = new Transition(statethirtyFour, '1', "right");
        statethirtyThree.addTransition('0', thirtyThreeTothirtyFour);
        Transition thirtyFourTothirtyFive = new Transition(statethirtyFive, '1', "right");
        statethirtyFour.addTransition('0', thirtyFourTothirtyFive);
        Transition thirtyFiveTothirtySix = new Transition(statethirtySix, '1', "right");
        statethirtyFive.addTransition('0', thirtyFiveTothirtySix);
        Transition thirtySixTothirtySeven = new Transition(statethirtySeven, '1', "right");
        statethirtySix.addTransition('0', thirtySixTothirtySeven);
        Transition thirtySevenTothirtyEight = new Transition(statethirtyEight, '1', "right");
        statethirtySeven.addTransition('0', thirtySevenTothirtyEight);
        Transition thirtyEightTothirtyNine = new Transition(statethirtyNine, '1', "right");
        statethirtyEight.addTransition('0', thirtyEightTothirtyNine);
        Transition thirtyNineToforty = new Transition(stateforty, '1', "right");
        statethirtyNine.addTransition('0', thirtyNineToforty);
        Transition fortyTofortyOne = new Transition(statefortyOne, '1', "right");
        stateforty.addTransition('0', fortyTofortyOne);
        Transition fortyOneTofortyTwo = new Transition(statefortyTwo, '1', "right");
        statefortyOne.addTransition('0', fortyOneTofortyTwo);
        Transition fortyTwoTofortyThree = new Transition(statefortyThree, '1', "right");
        statefortyTwo.addTransition('0', fortyTwoTofortyThree);
        Transition fortyThreeTofortyFour = new Transition(statefortyFour, '1', "right");
        statefortyThree.addTransition('0', fortyThreeTofortyFour);
        Transition fortyFourTofortyFive = new Transition(statefortyFive, '1', "right");
        statefortyFour.addTransition('0', fortyFourTofortyFive);
        Transition fortyFiveTofortySix = new Transition(statefortySix, '1', "right");
        statefortyFive.addTransition('0', fortyFiveTofortySix);
        Transition fortySixTofortySeven = new Transition(statefortySeven, '1', "right");
        statefortySix.addTransition('0', fortySixTofortySeven);
        Transition fortySevenTofortyEight = new Transition(statefortyEight, '1', "right");
        statefortySeven.addTransition('0', fortySevenTofortyEight);
        Transition fortyEightTofortyNine = new Transition(statefortyNine, '1', "right");
        statefortyEight.addTransition('0', fortyEightTofortyNine);
        Transition fortyNineTofifty = new Transition(statefifty, '1', "right");
        statefortyNine.addTransition('0', fortyNineTofifty);
        Transition fiftyTofiftyOne = new Transition(statefiftyOne, '1', "right");
        statefifty.addTransition('0', fiftyTofiftyOne);
        Transition fiftyOneTofiftyTwo = new Transition(statefiftyTwo, '1', "right");
        statefiftyOne.addTransition('0', fiftyOneTofiftyTwo);
        Transition fiftyTwoTofiftyThree = new Transition(statefiftyThree, '1', "right");
        statefiftyTwo.addTransition('0', fiftyTwoTofiftyThree);
        Transition fiftyThreeTofiftyFour = new Transition(statefiftyFour, '1', "right");
        statefiftyThree.addTransition('0', fiftyThreeTofiftyFour);
        Transition fiftyFourTofiftyFive = new Transition(statefiftyFive, '1', "right");
        statefiftyFour.addTransition('0', fiftyFourTofiftyFive);
        Transition fiftyFiveTofiftySix = new Transition(statefiftySix, '1', "right");
        statefiftyFive.addTransition('0', fiftyFiveTofiftySix);
        Transition fiftySixTofiftySeven = new Transition(statefiftySeven, '1', "right");
        statefiftySix.addTransition('0', fiftySixTofiftySeven);
        Transition fiftySevenTofiftyEight = new Transition(statefiftyEight, '1', "right");
        statefiftySeven.addTransition('0', fiftySevenTofiftyEight);
        Transition fiftyEightTofiftyNine = new Transition(statefiftyNine, '1', "right");
        statefiftyEight.addTransition('0', fiftyEightTofiftyNine);
        Transition fiftyNineToSixty = new Transition(stateSixty, '1', "right");
        statefiftyNine.addTransition('0', fiftyNineToSixty);
        Transition SixtyToSixtyOne = new Transition(stateSixtyOne, '1', "right");
        stateSixty.addTransition('0', SixtyToSixtyOne);
        Transition SixtyOneToSixtyTwo = new Transition(stateSixtyTwo, '1', "right");
        stateSixtyOne.addTransition('0', SixtyOneToSixtyTwo);
        Transition SixtyTwoToSixtyThree = new Transition(stateSixtyThree, '1', "right");
        stateSixtyTwo.addTransition('0', SixtyTwoToSixtyThree);
        Transition SixtyThreeToSixtyFour = new Transition(stateSixtyFour, '1', "right");
        stateSixtyThree.addTransition('0', SixtyThreeToSixtyFour);
        Transition SixtyFourToSixtyFive = new Transition(stateSixtyFive, '1', "right");
        stateSixtyFour.addTransition('0', SixtyFourToSixtyFive);
        Transition SixtyFiveToSixtySix = new Transition(stateSixtySix, '1', "right");
        stateSixtyFive.addTransition('0', SixtyFiveToSixtySix);
        Transition SixtySixToSixtySeven = new Transition(stateSixtySeven, '1', "right");
        stateSixtySix.addTransition('0', SixtySixToSixtySeven);
        Transition SixtySevenToSixtyEight = new Transition(stateSixtyEight, '1', "right");
        stateSixtySeven.addTransition('0', SixtySevenToSixtyEight);
        Transition SixtyEightToSixtyNine = new Transition(stateSixtyNine, '1', "right");
        stateSixtyEight.addTransition('0', SixtyEightToSixtyNine);
        Transition SixtyNineToSeventy = new Transition(stateSeventy, '1', "right");
        stateSixtyNine.addTransition('0', SixtyNineToSeventy);
        Transition SeventyToSeventyOne = new Transition(stateSeventyOne, '1', "right");
        stateSeventy.addTransition('0', SeventyToSeventyOne);
        Transition SeventyOneToSeventyTwo = new Transition(stateSeventyTwo, '1', "right");
        stateSeventyOne.addTransition('0', SeventyOneToSeventyTwo);
        Transition SeventyTwoToSeventyThree = new Transition(stateSeventyThree, '1', "right");
        stateSeventyTwo.addTransition('0', SeventyTwoToSeventyThree);
        Transition SeventyThreeToSeventyFour = new Transition(stateSeventyFour, '1', "right");
        stateSeventyThree.addTransition('0', SeventyThreeToSeventyFour);
        Transition SeventyFourToSeventyFive = new Transition(stateSeventyFive, '1', "right");
        stateSeventyFour.addTransition('0', SeventyFourToSeventyFive);
        Transition SeventyFiveToSeventySix = new Transition(stateSeventySix, '1', "right");
        stateSeventyFive.addTransition('0', SeventyFiveToSeventySix);
        Transition SeventySixToSeventySeven = new Transition(stateSeventySeven, '1', "right");
        stateSeventySix.addTransition('0', SeventySixToSeventySeven);
        Transition SeventySevenToSeventyEight = new Transition(stateSeventyEight, '1', "right");
        stateSeventySeven.addTransition('0', SeventySevenToSeventyEight);
        Transition SeventyEightToSeventyNine = new Transition(stateSeventyNine, '1', "right");
        stateSeventyEight.addTransition('0', SeventyEightToSeventyNine);
        Transition SeventyNineToEighty = new Transition(stateEighty, '1', "right");
        stateSeventyNine.addTransition('0', SeventyNineToEighty);
        Transition EightyToEightyOne = new Transition(stateEightyOne, '1', "right");
        stateEighty.addTransition('0', EightyToEightyOne);
        Transition EightyOneToEightyTwo = new Transition(stateEightyTwo, '1', "right");
        stateEightyOne.addTransition('0', EightyOneToEightyTwo);
        Transition EightyTwoToEightyThree = new Transition(stateEightyThree, '1', "right");
        stateEightyTwo.addTransition('0', EightyTwoToEightyThree);
        Transition EightyThreeToEightyFour = new Transition(stateEightyFour, '1', "right");
        stateEightyThree.addTransition('0', EightyThreeToEightyFour);
        Transition EightyFourToEightyFive = new Transition(stateEightyFive, '1', "right");
        stateEightyFour.addTransition('0', EightyFourToEightyFive);
        Transition EightyFiveToEightySix = new Transition(stateEightySix, '1', "right");
        stateEightyFive.addTransition('0', EightyFiveToEightySix);
        Transition EightySixToEightySeven = new Transition(stateEightySeven, '1', "right");
        stateEightySix.addTransition('0', EightySixToEightySeven);
        Transition EightySevenToEightyEight = new Transition(stateEightyEight, '1', "right");
        stateEightySeven.addTransition('0', EightySevenToEightyEight);
        Transition EightyEightToEightyNine = new Transition(stateEightyNine, '1', "right");
        stateEightyEight.addTransition('0', EightyEightToEightyNine);
        Transition EightyNineToNinety = new Transition(stateNinety, '1', "right");
        stateEightyNine.addTransition('0', EightyNineToNinety);
        Transition NinetyToNinetyOne = new Transition(stateNinetyOne, '1', "right");
        stateNinety.addTransition('0', NinetyToNinetyOne);
        Transition NinetyOneToNinetyTwo = new Transition(stateNinetyTwo, '1', "right");
        stateNinetyOne.addTransition('0', NinetyOneToNinetyTwo);
        Transition NinetyTwoToNinetyThree = new Transition(stateNinetyThree, '1', "right");
        stateNinetyTwo.addTransition('0', NinetyTwoToNinetyThree);
        Transition NinetyThreeToNinetyFour = new Transition(stateNinetyFour, '1', "right");
        stateNinetyThree.addTransition('0', NinetyThreeToNinetyFour);
        Transition NinetyFourToNinetyFive = new Transition(stateNinetyFive, '1', "right");
        stateNinetyFour.addTransition('0', NinetyFourToNinetyFive);
        Transition NinetyFiveToNinetySix = new Transition(stateNinetySix, '1', "right");
        stateNinetyFive.addTransition('0', NinetyFiveToNinetySix);
        Transition NinetySixToNinetySeven = new Transition(stateNinetySeven, '1', "right");
        stateNinetySix.addTransition('0', NinetySixToNinetySeven);
        Transition NinetySevenToNinetyEight = new Transition(stateNinetyEight, '1', "right");
        stateNinetySeven.addTransition('0', NinetySevenToNinetyEight);
        Transition NinetyEightToNinetyNine = new Transition(stateNinetyNine, '1', "right");
        stateNinetyEight.addTransition('0', NinetyEightToNinetyNine);
        Transition NinetyNineToHundred = new Transition(stateHundred, '1', "right");
        stateNinetyNine.addTransition('0', NinetyNineToHundred);
        Transition hundredToStart = new Transition(startState, '1', "left");
        stateHundred.addTransition('0', hundredToStart);

        // Define the Turing machine
        StateMachine turingMachine = new StateMachine(
                "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                preStart);
        turingMachine.addState(startState);
        turingMachine.addState(stateOne);
        turingMachine.addState(stateTwo);
        turingMachine.addState(stateThree);
        turingMachine.addState(stateFour);
        turingMachine.addState(stateFive);
        turingMachine.addState(stateSix);
        turingMachine.addState(stateSeven);
        turingMachine.addState(stateEight);
        turingMachine.addState(stateNine);
        turingMachine.addState(stateTen);
        turingMachine.addState(stateEleven);
        turingMachine.addState(stateTwelve);
        turingMachine.addState(stateThirteen);
        turingMachine.addState(stateFourteen);
        turingMachine.addState(stateFifteen);
        turingMachine.addState(stateSixteen);
        turingMachine.addState(stateSeventeen);
        turingMachine.addState(stateEighteen);
        turingMachine.addState(stateNineteen);
        turingMachine.addState(stateTwenty);
        turingMachine.addState(stateTwentyOne);
        turingMachine.addState(stateTwentyTwo);
        turingMachine.addState(stateTwentyThree);
        turingMachine.addState(stateTwentyFour);
        turingMachine.addState(stateTwentyFive);
        turingMachine.addState(stateTwentySix);
        turingMachine.addState(stateTwentySeven);
        turingMachine.addState(stateTwentyEight);
        turingMachine.addState(stateTwentyNine);
        turingMachine.addState(stateThirty);
        turingMachine.addState(statethirtyOne);
        turingMachine.addState(statethirtyTwo);
        turingMachine.addState(statethirtyThree);
        turingMachine.addState(statethirtyFour);
        turingMachine.addState(statethirtyFive);
        turingMachine.addState(statethirtySix);
        turingMachine.addState(statethirtySeven);
        turingMachine.addState(statethirtyEight);
        turingMachine.addState(statethirtyNine);
        turingMachine.addState(stateforty);
        turingMachine.addState(statefortyOne);
        turingMachine.addState(statefortyTwo);
        turingMachine.addState(statefortyThree);
        turingMachine.addState(statefortyFour);
        turingMachine.addState(statefortyFive);
        turingMachine.addState(statefortySix);
        turingMachine.addState(statefortySeven);
        turingMachine.addState(statefortyEight);
        turingMachine.addState(statefortyNine);
        turingMachine.addState(statefifty);
        turingMachine.addState(statefiftyOne);
        turingMachine.addState(statefiftyTwo);
        turingMachine.addState(statefiftyThree);
        turingMachine.addState(statefiftyFour);
        turingMachine.addState(statefiftyFive);
        turingMachine.addState(statefiftySix);
        turingMachine.addState(statefiftySeven);
        turingMachine.addState(statefiftyEight);
        turingMachine.addState(statefiftyNine);
        turingMachine.addState(stateSixty);
        turingMachine.addState(stateSixtyOne);
        turingMachine.addState(stateSixtyTwo);
        turingMachine.addState(stateSixtyThree);
        turingMachine.addState(stateSixtyFour);
        turingMachine.addState(stateSixtyFive);
        turingMachine.addState(stateSixtySix);
        turingMachine.addState(stateSixtySeven);
        turingMachine.addState(stateSixtyEight);
        turingMachine.addState(stateSixtyNine);
        turingMachine.addState(stateSeventy);
        turingMachine.addState(stateSeventyOne);
        turingMachine.addState(stateSeventyTwo);
        turingMachine.addState(stateSeventyThree);
        turingMachine.addState(stateSeventyFour);
        turingMachine.addState(stateSeventyFive);
        turingMachine.addState(stateSeventySix);
        turingMachine.addState(stateSeventySeven);
        turingMachine.addState(stateSeventyEight);
        turingMachine.addState(stateSeventyNine);
        turingMachine.addState(stateEighty);
        turingMachine.addState(stateEightyOne);
        turingMachine.addState(stateEightyTwo);
        turingMachine.addState(stateEightyThree);
        turingMachine.addState(stateEightyFour);
        turingMachine.addState(stateEightyFive);
        turingMachine.addState(stateEightySix);
        turingMachine.addState(stateEightySeven);
        turingMachine.addState(stateEightyEight);
        turingMachine.addState(stateEightyNine);
        turingMachine.addState(stateNinety);
        turingMachine.addState(stateNinetyOne);
        turingMachine.addState(stateNinetyTwo);
        turingMachine.addState(stateNinetyThree);
        turingMachine.addState(stateNinetyFour);
        turingMachine.addState(stateNinetyFive);
        turingMachine.addState(stateNinetySix);
        turingMachine.addState(stateNinetySeven);
        turingMachine.addState(stateNinetyEight);
        turingMachine.addState(stateNinetyNine);
        turingMachine.addState(stateHundred);
        turingMachine.addState(finalState);

        // Run the Turing machine
        turingMachine.run();

        // Output the result
        System.out.println(turingMachine.getOutput());
    }
}
